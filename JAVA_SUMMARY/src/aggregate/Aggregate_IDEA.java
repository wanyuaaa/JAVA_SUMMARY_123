package aggregate;

/**
 * @author wanyu
 * @create 2022-02-16 9:48
 *
 * Collection
 *
 * 数组：1.一旦初始化，长度确定
 *      2.比如String[]/int[]/Object[]/char[]
 *      3.定义完成，其元素类型确定只能操作指定类型数据
 *
 *      4.一旦初始化，长度不可修改
 *      5.数组中提供的方法有限，增删不便
 *      6.获取数组中实际个数没有现成的属性和方法
 *      7.数组存储的特点：有序、可重复的，对于无序，不重复的需求，不能满足
 *      8.
 *
 * 集合框架概述
 *      集合和数组都是对多个数据进行存储，都是JAVA容器（都是内存性存储，并非持续化存储）
 *      一方面，面向对象语言对事物的体现都是以对象的形式，为了方便对多个对象的操作，就要对对象进行存储。
 *       另一方面，使用Array存储对象方面具有一些弊端，而Java 集合就像一种容器，可以动态地把多个对象的引用放入容器中。
 *          数组在内存存储方面的特点：
 *              数组初始化以后，长度就确定了。
 *              数组声明的类型，就决定了进行元素初始化时的类型
 *          数组在存储数据方面的弊端：
 *              数组初始化以后，长度就不可变了，不便于扩展
 *              数组中提供的属性和方法少，不便于进行添加、删除、插入等操作，且效率不高。同时无法直接获取存储元素的个数
 *              数组存储的数据是有序的、可以重复的。---->存储数据的特点单一
 *      Java 集合类可以用于存储数量不等的多个对象，还可用于保存具有映射关系的关联数组。
 *
 * Java 集合可分为 Collection 和 Map 两种体系
 *      |----Collection：存储一个一个的对象
 *          |----List：有序的，可重复的-->动态数组
 *              |----ArrayList
 *              |----LinkedList
 *              |----Vector
 *          |----Set：无序的，不可重复的-->数学集合
 *              |----HashSet
 *              |----LinkedHashSet
 *              |----TreeSet
 *      |----Map：双列集合，存储一对一对的数据-->函数：y=f(x)
 *              |----HashMap
 *              |----LinkedHashMap
 *              |----TreeMap
 *              |----HashTable
 *              |----Properties
 *
 */
public class Aggregate_IDEA {
}
